service: twilio-lambda-functions
frameworkVersion: ">=1.1.0 <2.0.0"
plugins:
  - serverless-dotenv-plugin
  #  - serverless-bundle
provider:
  name: aws
  runtime: nodejs12.x
  role: arn:aws:iam::972126823319:role/lambdacarddate
  region: us-east-2
  memorySize: 256
  timeout: 10
  environment:
    tableName: ${self:custom.tableName}
    twilioAccountSid: ${env:TWILIO_ACCOUNT_SID}
    twilioAuthToken: ${env:TWILIO_AUTH_TOKEN}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*

      Resource: '*'

  package:
    individually: true

custom:
  tableName: conversation

functions:
  SendSms:
    handler: handler.sendSms
    events:
      - http:
          path: api/sendSms
          method: post
          integration: lambda
          cors: true
  ReceiveSms:
    handler: lambda-endpoints/receive_webhook.receiveSms
    events:
      - http:
          path: api/receiveSms
          method: post
          integration: lambda
          cors: true
  initializeConversation:
    handler: lambda-endpoints/initializeConversation.handler
    events:
      - http:
          path: intialize-conversation
          method: post
          integration: lambda
          cors: true
  maskNumbers:
    handler: lambda-endpoints/maskNumber.handler
    events:
      - http:
          path: mask-number
          method: post
          integration: lambda
          cors: true
  handleConversations:
    handler: lambda-endpoints/handleConversations.handler
    events:
      - http:
          path: handle-conversations
          method: post
          integration: lambda
          cors: true
  countMessages:
    handler: lambda-endpoints/countMessages.handler
    events:
      - http:
          path: count-messages
          method: post
          integration: lambda
          cors: true
  updateUsers:
    handler: lambda-endpoints/updateUsers.handler
    events:
      - http:
          path: update-user
          method: put
          integration: lambda
          cors: true

resources:
  Resources:
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
